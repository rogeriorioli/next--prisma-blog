import { Post, PrismaClient } from '@prisma/client';

import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';
import Card from '../components/Card';
import Feature from '../components/Feature';
import Container from '../components/Globals/Container';



interface PostTypes {
  allPosts: string
}
export default function Home({ allPosts}: PostTypes) {
  const posts = JSON.parse(allPosts)
  return (
    <>
      <Head>
        <title>Home</title>
        <meta name="description" content  ="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container>
        <Feature allPosts={posts}/>
      </Container>
      <Container>
          {posts.map((item : any) => {
            return (<Card key={item.id} author={item.user.username} title={item.title} image={item.image} description={item.description} tags={item.tags} avatar={item.user.avatar} data={item.created_at} link={item.slug}/>)
          })}
      </Container>
    </>
  )
}
export async function getStaticProps(): Promise<{ props: { allPosts: string } }> {
  const prisma = new PrismaClient()
  const posts = await prisma.post.findMany({
    include: {
      user: {
        select: {
          id: true,
          userName: true,
          avatar: true
        }
      },
      categorie: true
    },
    orderBy: {
      created_at: 'desc',
    },
  })
  const allPosts = JSON.stringify(posts)
  return {
    props: { allPosts: allPosts || null }
  }
}
